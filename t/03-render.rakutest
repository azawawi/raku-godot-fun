use v6;

use Test;

plan 10;

use Godot::Fun;


{
    my $node = Godot::Fun::Node.new;
    my $text = $node.render;
    ok $text.lines.elems == 2, "Only 2 lines are expected";
    ok $text.lines[0] eq '[node name="Node" type="Node" parent="."]',
        'Rendered name, type and parent are correct';
}

{
    my $node = Godot::Fun::Node.new(tx => 5);
    my $text = $node.render;
    ok $text.lines.elems == 3, "3 lines are expected";
    my @lines = $text.lines;
    ok @lines[0] eq '[node name="Node" type="Node" parent="."]',
        'Rendered name, type and parent are correct';
    ok @lines[1] eq 'transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 0, 0 )',
        'Rendered transform is correct';

}

{
    my $spatial = Godot::Fun::Spatial.new;
    my $text = $spatial.render;
    ok $text.lines.elems == 2, "Only 2 lines are expected";
    ok $text.lines[0] eq '[node name="Spatial" type="Spatial" parent="."]',
        'Rendered name, type and parent are correct';
}

{
    my $spatial = Godot::Fun::Spatial.new(tx => 5);
    my $text = $spatial.render;
    ok $text.lines.elems == 3, "3 lines are expected";
    my @lines = $text.lines;
    ok @lines[0] eq '[node name="Spatial" type="Spatial" parent="."]',
        'Rendered name, type and parent are correct';
    ok @lines[1] eq 'transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 5, 0, 0 )',
        'Rendered name, type and parent are correct';
        'Rendered transform is correct';

}
